apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      {{- if .Values.fileEnvConfig }}
        - name: {{ include "chart.fileEnvConfigSettings" . }}
          configMap:
            name: {{ include "chart.fileEnvConfigSettings" . }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          # command: ["bin/bash", "-c"]
          # args: ["sh /etc/nginx/rld-build-scripts/generate_configs.sh && exec nginx -g 'daemon off;'"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.livenessProbePath }}
              port: {{ .Values.deployment.livenessProbePort }}
          readinessProbe:
            httpGet:
              path: {{ .Values.deployment.readinessProbePath }}
              port: {{ .Values.deployment.readinessProbePort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- if .Values.fileEnvConfig }}
            - name: {{ include "chart.fileEnvConfigSettings" . }}
              mountPath: "{{ .Values.fileEnvConfig.mountPath }}{{ .Values.fileEnvConfig.fileName }}"
              subPath: {{ .Values.fileEnvConfig.fileName }}
          {{- end }}
          env:
            {{- range  .Values.image.env }}
            - name: {{ .name }}
              value: {{ .value }}
            {{- end }}	              
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
